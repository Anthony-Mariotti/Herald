// <auto-generated />
using System;
using Herald.Core.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Herald.Core.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(HeraldDbContext))]
    [Migration("20220620200632_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("QueuedTracksSeq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("QueuesSeq")
                .IncrementsBy(10);

            modelBuilder.Entity("Herald.Core.Domain.Entities.Guilds.GuildEntity", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("Joined")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeftOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OwnerId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("GuildId");

                    b.ToTable("Guilds", (string)null);
                });

            modelBuilder.Entity("Herald.Core.Domain.Entities.Soundtracks.QueueEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<long>("Id"), "QueuesSeq");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Queues", (string)null);
                });

            modelBuilder.Entity("Herald.Core.Domain.ValueObjects.Modules.HeraldModule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("GuildModules", (string)null);
                });

            modelBuilder.Entity("Herald.Core.Domain.ValueObjects.Soundtracks.QueuedTrackValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<long>("Id"), "QueuedTracksSeq");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Encoded")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Livestream")
                        .HasColumnType("bit");

                    b.Property<decimal>("NotifyChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("Paused")
                        .HasColumnType("bit");

                    b.Property<bool>("Played")
                        .HasColumnType("bit");

                    b.Property<bool>("Playing")
                        .HasColumnType("bit");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<long?>("QueueId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("RequestUserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("Seekable")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("QueueId");

                    b.ToTable("QueuedTracks", (string)null);
                });

            modelBuilder.Entity("Herald.Core.Domain.ValueObjects.Modules.HeraldModule", b =>
                {
                    b.HasOne("Herald.Core.Domain.Entities.Guilds.GuildEntity", null)
                        .WithMany("Modules")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Herald.Core.Domain.ValueObjects.Soundtracks.QueuedTrackValue", b =>
                {
                    b.HasOne("Herald.Core.Domain.Entities.Soundtracks.QueueEntity", null)
                        .WithMany("Tracks")
                        .HasForeignKey("QueueId");
                });

            modelBuilder.Entity("Herald.Core.Domain.Entities.Guilds.GuildEntity", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Herald.Core.Domain.Entities.Soundtracks.QueueEntity", b =>
                {
                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
